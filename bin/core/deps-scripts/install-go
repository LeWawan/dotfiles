#!/usr/bin/env bash
set -euo pipefail

GO_VERSION="1.24.4"  # Mets la version souhait√©e ici

echo "üöÄ Installation de Go $GO_VERSION..."

# D√©tecte l'OS et l'architecture
OS=""
ARCH=""

case "$(uname -s)" in
  Linux) OS="linux" ;;
  Darwin) OS="darwin" ;;
  *)
    echo "‚ùå OS non support√©: $(uname -s)"
    exit 1
    ;;
esac

# Architecture
case "$(uname -m)" in
  x86_64) ARCH="amd64" ;;
  aarch64|arm64) ARCH="arm64" ;;
  *)
    echo "‚ùå Architecture non support√©e: $(uname -m)"
    exit 1
    ;;
esac

GO_SOURCE="go${GO_VERSION}.${OS}-${ARCH}"
GO_TAR="${GO_SOURCE}.tar.gz"
DOWNLOAD_URL="https://go.dev/dl/${GO_TAR}"

echo "T√©l√©chargement de $DOWNLOAD_URL..."

cd /tmp

# Nettoyage des anciens fichiers go t√©l√©charg√©s
rm -f go*.tar.gz

# T√©l√©chargement avec wget et suivi des redirections
if ! wget -q --show-progress --progress=bar:force:noscroll -O "$GO_TAR" "$DOWNLOAD_URL"; then
  echo "‚ùå √âchec du t√©l√©chargement de $DOWNLOAD_URL"
  exit 1
fi

# V√©rification que le fichier est bien une archive tar.gz valide
if ! tar -tzf "$GO_TAR" > /dev/null 2>&1; then
  echo "‚ùå Le fichier t√©l√©charg√© n'est pas une archive tar.gz valide. V√©rifie l'URL et la version."
  exit 1
fi

echo "Extraction de Go dans /usr/local..."

sudo rm -rf /usr/local/go
sudo tar -C /usr/local -xzf "$GO_TAR"

rm "$GO_TAR"

export PATH=$PATH:/usr/local/go/bin

go version

echo "‚úÖ Go $GO_VERSION install√©."
